# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "generic/ubuntu2004"
  #config.vm.box = "roboxes/ubuntu2004"

#---------- worker5 ----------
  config.vm.define "worker5_192.168.33.105" do |server|
    server.vm.network "private_network", ip: "192.168.33.105"
    server.vm.hostname = "worker5"
    server.vm.provider "libvirt" do |kvm|
      kvm.memory = 4096
      kvm.cpus = 2
      kvm.machine_type = "q35"
      kvm.kvm_hidden = true
    end
    server.vm.provision "shell", inline: <<-SHELL
      sudo ip link set eth1 mtu 1450
      sudo swapoff -a
      sudo sed -i "/swap/d" /etc/fstab
      sudo cat <<EOF > /etc/modprobe.d/blacklist-nouveau.conf
blacklist nouveau
options nouveau modeset=0
EOF
      sudo update-initramfs -u
      sudo apt-get update
      sudo apt-get install -y curl
      sudo apt-get install -y docker.io
      sudo cat <<EOF > /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF
      sudo systemctl enable docker
      sudo systemctl daemon-reload
      sudo systemctl restart docker
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      sudo cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
      sudo apt-get update
      sudo apt-get install -y -q kubelet kubectl kubeadm
      sudo echo "KUBELET_EXTRA_ARGS=--node-ip=192.168.33.105" > /etc/default/kubelet
      sudo systemctl daemon-reload
      sudo systemctl restart kubelet
      cat <<EOF > /etc/rc.local
#!/bin/sh
sudo ip link set eth1 mtu 1450
EOF
      chmod 775 /etc/rc.local
      sudo sed -i "/swap/d" /etc/fstab
      sudo sed -i '2i \ \ "insecure-registries":["192.168.1.5:5000"],' /etc/docker/daemon.json
    SHELL
  end
#---------- worker6 ----------
  config.vm.define "worker6_192.168.33.106" do |server|
    server.vm.network "private_network", ip: "192.168.33.106"
    server.vm.hostname = "worker6"
    server.vm.provider "libvirt" do |kvm|
      kvm.memory = 4096
      kvm.cpus = 2
      kvm.machine_type = "q35"
      kvm.kvm_hidden = true
    end
    server.vm.provision "shell", inline: <<-SHELL
      sudo ip link set eth1 mtu 1450
      sudo swapoff -a
      sudo sed -i "/swap/d" /etc/fstab
      sudo cat <<EOF > /etc/modprobe.d/blacklist-nouveau.conf
blacklist nouveau
options nouveau modeset=0
EOF
      sudo update-initramfs -u
      sudo apt-get update
      sudo apt-get install -y curl
      sudo apt-get install -y docker.io
      sudo cat <<EOF > /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF
      sudo systemctl enable docker
      sudo systemctl daemon-reload
      sudo systemctl restart docker
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      sudo cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
      sudo apt-get update
      sudo apt-get install -y -q kubelet kubectl kubeadm
      sudo echo "KUBELET_EXTRA_ARGS=--node-ip=192.168.33.106" > /etc/default/kubelet
      sudo systemctl daemon-reload
      sudo systemctl restart kubelet
      cat <<EOF > /etc/rc.local
#!/bin/sh
sudo ip link set eth1 mtu 1450
EOF
      chmod 775 /etc/rc.local
      sudo sed -i "/swap/d" /etc/fstab
      sudo sed -i '2i \ \ "insecure-registries":["192.168.1.5:5000"],' /etc/docker/daemon.json
    SHELL
  end
#---------- worker7 ----------
  config.vm.define "worker7_192.168.33.107" do |server|
    server.vm.network "private_network", ip: "192.168.33.107"
    server.vm.hostname = "worker7"
    server.vm.provider "libvirt" do |kvm|
      kvm.memory = 4096
      kvm.cpus = 2
      kvm.machine_type = "q35"
      kvm.kvm_hidden = true
    end
    server.vm.provision "shell", inline: <<-SHELL
      sudo ip link set eth1 mtu 1450
      sudo swapoff -a
      sudo sed -i "/swap/d" /etc/fstab
      sudo cat <<EOF > /etc/modprobe.d/blacklist-nouveau.conf
blacklist nouveau
options nouveau modeset=0
EOF
      sudo update-initramfs -u
      sudo apt-get update
      sudo apt-get install -y curl
      sudo apt-get install -y docker.io
      sudo cat <<EOF > /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF
      sudo systemctl enable docker
      sudo systemctl daemon-reload
      sudo systemctl restart docker
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      sudo cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
      sudo apt-get update
      sudo apt-get install -y -q kubelet kubectl kubeadm
      sudo echo "KUBELET_EXTRA_ARGS=--node-ip=192.168.33.107" > /etc/default/kubelet
      sudo systemctl daemon-reload
      sudo systemctl restart kubelet
      cat <<EOF > /etc/rc.local
#!/bin/sh
sudo ip link set eth1 mtu 1450
EOF
      chmod 775 /etc/rc.local
      sudo sed -i "/swap/d" /etc/fstab
      sudo sed -i '2i \ \ "insecure-registries":["192.168.1.5:5000"],' /etc/docker/daemon.json
    SHELL
  end
#---------- worker8 ----------
  config.vm.define "worker8_192.168.33.108" do |server|
    server.vm.network "private_network", ip: "192.168.33.108"
    server.vm.hostname = "worker8"
    server.vm.provider "libvirt" do |kvm|
      kvm.memory = 16384
      kvm.cpus = 2
      kvm.machine_type = "q35"
      kvm.cpu_mode = "host-passthrough"
      kvm.kvm_hidden = true
      kvm.pci :bus => '0x01', :slot => '0x00', :function => '0x0'
    end
    server.vm.provision "shell", inline: <<-SHELL
      sudo ip link set eth1 mtu 1450
      sudo swapoff -a
      sudo sed -i "/swap/d" /etc/fstab
      sudo cat <<EOF > /etc/modprobe.d/blacklist-nouveau.conf
blacklist nouveau
options nouveau modeset=0
EOF
      sudo update-initramfs -u 
      sudo apt-get update
      sudo apt-get install -y curl
      sudo apt-get install -y docker.io
      sudo cat <<EOF > /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF
      sudo systemctl enable docker
      sudo systemctl daemon-reload
      sudo systemctl restart docker
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      sudo cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
      sudo apt-get update
      sudo apt-get install -y -q kubelet kubectl kubeadm
      sudo echo "KUBELET_EXTRA_ARGS=--node-ip=192.168.33.108" > /etc/default/kubelet
      sudo systemctl daemon-reload
      sudo systemctl restart kubelet
      cat <<EOF > /etc/rc.local
#!/bin/sh
sudo ip link set eth1 mtu 1450
EOF
      chmod 775 /etc/rc.local
      sudo sed -i "/swap/d" /etc/fstab
      sudo sed -i '2i \ \ "insecure-registries":["192.168.1.5:5000"],' /etc/docker/daemon.json
    SHELL
  end
#--------------------
end
